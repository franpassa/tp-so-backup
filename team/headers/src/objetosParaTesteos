
t_entrenador* entrenador1 = malloc(sizeof(t_entrenador));
entrenador1->idEntrenador =  1;
entrenador1->posicionX = 12;
entrenador1->posicionY = 13;
entrenador1->pokesAtrapados = NULL;
entrenador1->pokesObjetivos = NULL;

t_entrenador* entrenador2 = malloc(sizeof(t_entrenador));
entrenador2->idEntrenador =  1;
entrenador2->posicionX = 14;
entrenador2->posicionY = 15;
entrenador2->pokesAtrapados = NULL;
entrenador2->pokesObjetivos = NULL;

t_pokemon* pikachu = malloc(sizeof(t_pokemon));
pikachu->nombre = "pikachu";
pikachu->posicionX = 11;
pikachu->posicionY = 12;

t_pokemon* pikachu2 = malloc(sizeof(t_pokemon));
pikachu2->nombre = "pikachu2";
pikachu2->posicionX = 13;
pikachu2->posicionY = 14;

t_pokemon* pikachu3 = malloc(sizeof(t_pokemon));
pikachu3->nombre = "pikachu3";
pikachu3->posicionX = 2;
pikachu3->posicionY = 5;

t_pokemon* pikachu4 = malloc(sizeof(t_pokemon));
pikachu4->nombre = "pikachu4"; // <- no se puede modificar es constante 
pikachu4->posicionX = 7;
pikachu4->posicionY = 2;

t_pokemon* pikachu4 = malloc(sizeof(t_pokemon));
pikachu4->nombre = string_new();	 // 
string_append(&pikachu4->nombre,"pikachu4");
pikachu4->posicionX = 7;
pikachu4->posicionY = 2;

t_list* pruebaDeListado = list_create();
list_add(pruebaDeListado,pikachu);
list_add(pruebaDeListado,pikachu2);
list_add(pruebaDeListado,pikachu3);
list_add(pruebaDeListado,pikachu4);

// free de pruebas
list_destroy_and_destroy_elements(pruebaDeListadoPokemon,liberarPokemon);
free(entrenadorPrueba);
	

	printf("\n lista de objetivos = \n");
	list_iterate(listaObjetivos,mostrarEspecie);

	t_pokemon* pikachu4 = malloc(sizeof(t_pokemon));
	pikachu4->nombre = string_new();
	string_append(&pikachu4->nombre,"pikachu4");
	pikachu4->posicionX = 12;
	pikachu4->posicionY = 7;

	t_pokemon* pikachu2 = malloc(sizeof(t_pokemon));
	pikachu2->nombre = string_new();
	string_append(&pikachu2->nombre,"pikachu2");
	pikachu2->posicionX = 3;
	pikachu2->posicionY = 5;

	t_list* pokemons = list_create();
	list_add(pokemons,pikachu4);
	//list_add(pokemons,pikachu2);

	t_entrenador* entrenadorBase = list_get(entrenadores,0);

	t_list* entrenadores123 = list_create();
	list_add(entrenadores123,entrenadorBase);

	t_entrenador* temporal = entrenadorAPlanidicar(entrenadores123,pokemons);

	printf("identificador del entrenador que esta mas cerca = \n  %d \n",temporal->idEntrenador);
	printf("\n nombre del pokemon a moverse = \n ");
	mostrarString(temporal->pokemonAMoverse->nombre);
	uint32_t distanciaTemporal = distanciaEntrenadorPokemon(temporal->posicionX,temporal->posicionY,temporal->pokemonAMoverse->posicionX,temporal->pokemonAMoverse->posicionY);
	printf("\n distancia entre entrenador y pokemon = %d", distanciaTemporal);


